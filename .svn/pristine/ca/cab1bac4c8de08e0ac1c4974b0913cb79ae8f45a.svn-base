import { login } from "@/api/user";
import { getToken, setToken, removeToken } from "@/utils/auth";
import Layout from "@/components/layout/index.vue";
// import { component } from "vue/types/umd";

/**
 * 后台查询菜单数据
 * @param routes
 */
function generaMenu(routes, data) {
  data.forEach((item) => {
    const menu = {
      path: item.path,
      component:
        item.path === "/visualMap"
          ? (resolve) => require([`@/views${item.path}/index.vue`], resolve)
          : filterComponent(item),
      children: [],
      redirect: item.redirect ? item.redirect : null,
      name: item.meta.title,
      icon: item.icon ? item.icon : "",
      id: item.id,
      meta: {
        title: item.meta.title,
      },
    };
    if (item.children && item.children.length !== 0) {
      generaMenu(menu.children, item.children);
    }
    if (
      item.children &&
      item.children.length === 0 &&
      item.component === "Layout"
    ) {
      let arr = [
        {
          path: item.path,
          component: (resolve) =>
            require([`@/views${item.path}/index.vue`], resolve),
          redirect: item.redirect ? item.redirect : null,
          name: item.meta.title,
          icon: item.icon ? item.icon : "",
          id: item.id,
          meta: {
            title: item.meta.title,
          },
        },
      ];
      menu.children = arr;
    }
    routes.push(menu);
  });
  return routes;
}

function filterComponent(item) {
  if (item.component === "Layout") {
    return Layout;
  } else {
    return (resolve) => require([`@/views${item.component}`], resolve);
  }
}

export const loginInfo = ({ commit }, payload) => {
  const { name, pwd } = payload;
  return new Promise((resolve, reject) => {
    login({ name, pwd })
      .then((res) => {
        localStorage.setItem("Login_data", JSON.stringify(res));
        commit("SET_TOKEN", res.token);
        setToken(res.token);
        resolve(res);
      })
      .catch((error) => {
        reject(error);
      });
  });
};

export const getRoutes = ({ commit }, payload) => {
  return new Promise((resolve, reject) => {
    commit("SET_MENULIST", menulist);
    let routes = generaMenu([], menulist);
    console.log(routes);
    routes.length > 0 ? commit("SET_ROUTES", routes) : [];

    resolve(routes);
    return;

    // getAuthMenu(userInfo.userId).then(res => {
    //     const menulist = res.data;
    //     let routes = generaMenu(asyncRoutes, newMenulist)
    //     routes.length > 0 ? commit('SET_ROUTES', routes) : [];
    //     resolve(routes)
    //     return;
    // }).catch(error => {
    //     reject(error)
    // })
  });
};

export const logout = ({ commit }, payload) => {
  return new Promise((resolve, reject) => {
    commit("SET_TOKEN", "");
    commit("SET_ROUTES", []);
    commit("SET_MENULIST", []);
    removeToken();
    localStorage.clear();
    sessionStorage.clear();
    resolve();
  }).catch((error) => {
    reject(error);
  });
};

// remove token
export const resetToken = ({ commit }) => {
  return new Promise((resolve) => {
    commit("SET_TOKEN", "");
    commit("SET_ROLES", []);
    removeToken();
    resolve();
  });
};

let menulist = [
  {
    path: "/home",
    component: "Layout",
    name: "index",
    meta: {
      title: "首页",
      icon: "index",
    },
    children: [],
  },
  {
    path: "/visualMap",
    component: "visualMap",
    name: "visualMap",
    meta: {
      title: "可视化系统",
      icon: "visualMap",
    },
    children: [],
  },
  {
    path: "/subjectPlan",
    component: "Layout",
    meta: {
      title: "专项规划管理",
    },
    children: [
      {
        path: "/subjectPlan",
        name: "subjectPlan",
        component: "/subjectPlan/index",
        meta: {
          title: "专项规划管理",
          icon: "usermanager",
        },
      },
      {
        path: "/addsubject",
        name: "addsubject",
        component: "/subjectPlan/addSubject/index",
        meta: {
          title: "新增/修改专项规划",
          icon: "usermanager",
        },
      },
    ],
  },
  {
    path: "/usermanager1",
    component: "Layout",
    meta: {
      title: "挂钩复垦管理",
    },
    children: [
      {
        path: "/usermanager1",
        name: "usermanager1",
        component: "/system/usermanager/index",
        meta: {
          title: "复垦项目管理",
          icon: "usermanager",
        },
      },
      {
        path: "/usermanager1",
        name: "usermanager1",
        component: "/system/usermanager/index",
        meta: {
          title: "拆旧地块管理",
          icon: "usermanager",
        },
      },
    ],
  },
  {
    path: "/usermanager",
    component: "Layout",
    name: "usermanager",
    meta: {
      title: "系统管理",
      icon: "example",
    },
    children: [
      {
        path: "/usermanager",
        name: "usermanager",
        component: "/system/usermanager/index",
        meta: {
          title: "用户管理",
          icon: "usermanager",
        },
      },
      {
        path: "/rolemanager",
        name: "rolemanager",
        component: "/system/rolemanager/index",
        meta: {
          title: "角色管理",
          icon: "rolemanager",
        },
      },
      {
        path: "/logmanager",
        name: "logmanager",
        component: "/system/logmanager/index",
        meta: {
          title: "日志管理",
          icon: "rolemanager",
        },
      },
    ],
  },
];
